/**
 * 주어진 배열의 세 숫자의 조합 중 target에 가장 가까운 값 리턴하기
 * input    -> [-1, 2, 1, -4]
 * target   -> 1
 * output   -> 2 (-1 + 2 + 1)
 * 가장 가까운 수?
 * 두 수의 거리
 * 3 - 1  = 2;
 * -1 + 1 = 0;
 */

function solution(input, target) {
  let o = Number.MAX_SAFE_INTEGER;
  const len = input.length;
  const sums = [];
  input = input.sort((a, b) => a - b);
  console.log(input.length);
  for (let i = 0; i < len - 2; i++) {
    const a = input[i];
    // 타깃이 크면 제외
    //if (a > target) continue;
    let m = i + 1;
    let e = len - 1;
    while (m < e) {
      const sum = a + input[m] + input[e];
      if (Math.abs(sum - target) < Math.abs(o - target)) {
        o = sum;
      }
      if (sum === target) {
        o = sum;
        break;
      } else if (sum > target) {
        while (input[e] === input[e - 1]) e--;
        e--;
      } else {
        while (input[m] === input[m + 1]) m++;
        m++;
      }
    }
  }
  console.log("o", o);
  return o;
}
// var a = -2960;
// if (a < -2900) {
//   console.log("a", a);
// }
// solution([-1, 2, 1, -4], 1);
// solution([0, 0, 0], 1);
solution([1, 1, 1, 1], 0);
solution(
  [
    -13, 592, -501, 770, -952, -675, 322, -829, -246, 657, 608, 485, -112, 967,
    -30, 182, -969, 559, -286, -64, 24, 365, -158, 701, 535, -429, -217, 28,
    948, -114, -536, -711, 693, 23, -958, -283, -700, -672, 311, 314, -712,
    -594, -351, 658, 747, 949, 70, 888, 166, 495, 244, -380, -654, 454, -281,
    -811, -168, -839, -106, 877, -216, 523, -234, -8, 289, -175, 920, -237,
    -791, -976, -509, -4, -3, 298, -190, 194, -328, 265, 150, 210, 285, -176,
    -646, -465, -97, -107, 668, 892, 612, -54, -272, -910, 557, -212, -930,
    -198, 38, -365, -729, -410, 932, 4, -565, -329, -456, 224, 443, -529, -428,
    -294, 191, 229, 112, -867, -163, -979, 236, -227, -388, -209, 984, 188,
    -549, 970, 951, -119, -146, 801, -554, 564, -769, 334, -819, -356, -724,
    -219, 527, -405, -27, -759, 722, -774, 758, 394, 146, 517, 870, -208, 742,
    -782, 336, -364, -558, -417, 663, -914, 536, 293, -818, 847, -322, 408, 876,
    -823, 827, 167
  ],
  7175
);

//-2960
solution(
  [
    833, 736, 953, -584, -448, 207, 128, -445, 126, 248, 871, 860, 333, -899,
    463, 488, -50, -331, 903, 575, 265, 162, -733, 648, 678, 549, 579, -172,
    -897, 562, -503, -508, 858, 259, -347, -162, -505, -694, 300, -40, -147,
    383, -221, -28, -699, 36, -229, 960, 317, -585, 879, 406, 2, 409, -393,
    -934, 67, 71, -312, 787, 161, 514, 865, 60, 555, 843, -725, -966, -352, 862,
    821, 803, -835, -635, 476, -704, -78, 393, 212, 767, -833, 543, 923, -993,
    274, -839, 389, 447, 741, 999, -87, 599, -349, -515, -553, -14, -421, -294,
    -204, -713, 497, 168, 337, -345, -948, 145, 625, 901, 34, -306, -546, -536,
    332, -467, -729, 229, -170, -915, 407, 450, 159, -385, 163, -420, 58, 869,
    308, -494, 367, -33, 205, -823, -869, 478, -238, -375, 352, 113, -741, -970,
    -990, 802, -173, -977, 464, -801, -408, -77, 694, -58, -796, -599, -918,
    643, -651, -555, 864, -274, 534, 211, -910, 815, -102, 24, -461, -146
  ],
  -7111
);

/**
 * 흙길 보수하기
 *  어젯밤 겨울 캠프 장소에서 월드 본원까지 이어지는, 흙으로 된 비밀길 위에 폭우가 내려서 N(1 ≤ N ≤ 10,000)개의 물웅덩이가 생겼다.
 *  월드학원은 물웅덩이를 덮을 수 있는 길이가 L(1 ≤ L ≤ 1,000,000)인 널빤지들을 충분히 가지고 있어서,
 *  이들로 다리를 만들어 물웅덩이들을 모두 덮으려고 한다
 *
 *  물웅덩이들의 위치와 크기에 대한 정보가 주어질 때, 모든 물웅덩이들을 덮기 위해 필요한 널빤지들의 최소 개수를 구하여라.
 *
 *  첫째 줄에 두 정수 N과 L이 들어온다.
 *  둘째 줄부터 N+1번째 줄까지 총 N개의 줄에 각각의 웅덩이들의 정보가 주어진다.
 *  웅덩이의 정보는 웅덩이의 시작 위치와 끝 위치로 이루어진다. 각 위치는 0 이상 1,000,000,000 이하의 정수이다.
 *  입력으로 주어지는 웅덩이는 겹치지 않는다.
 *
 *  웅덩이 길이만 체크해서는 정확한 필요 판자 수를 구할 수  없다.
 *  웅덩이의 시작 위치에서 판자를 깔고 위치를 이동해야 가능..
 *  ..MMMM..MMMM.MMM.....
 *  .MMMMM..MMMM.MMMM....
 *  012345678901234567890
 * 웅덩이 위치는 결국 s~(e-1)에 종료된다.
 */

function solution({ l, pool }) {
  pool.sort((a, b) => (a[0] > b[0] ? 1 : -1));
  let len = 0;
  let endPos = 0;
  for (let i = 0; i < pool.length; i++) {
    const [s, e] = pool[i];
    const diff = e - Math.max(s, endPos);
    const c = Math.ceil(diff / l);
    endPos = s + l * c;
    len += c;
  }
  return { l, len, endPos };
}

[
  {
    l: 3,
    pool: [
      [1, 6],
      [13, 17],
      [8, 12],
    ],
  },
].forEach((info) => {
  console.log(solution(info));
});
